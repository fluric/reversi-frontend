/**
 * Reversi API
 * API for Reversi game
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Player from './Player';

/**
 * The Move model module.
 * @module model/Move
 * @version 1.0.0
 */
class Move {
    /**
     * Constructs a new <code>Move</code>.
     * @alias module:model/Move
     */
    constructor() { 
        
        Move.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Move</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Move} obj Optional instance to populate.
     * @return {module:model/Move} The populated <code>Move</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Move();

            if (data.hasOwnProperty('row')) {
                obj['row'] = ApiClient.convertToType(data['row'], 'Number');
            }
            if (data.hasOwnProperty('col')) {
                obj['col'] = ApiClient.convertToType(data['col'], 'Number');
            }
            if (data.hasOwnProperty('player')) {
                obj['player'] = Player.constructFromObject(data['player']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Move</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Move</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} row
 */
Move.prototype['row'] = undefined;

/**
 * @member {Number} col
 */
Move.prototype['col'] = undefined;

/**
 * @member {module:model/Player} player
 */
Move.prototype['player'] = undefined;






export default Move;

